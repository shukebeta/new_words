// Mocks generated by Mockito 5.4.6 from annotations
// in new_words/test/services/account_service_v2_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dio/dio.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:new_words/apis/account_api_v2.dart' as _i4;
import 'package:new_words/common/foundation/foundation.dart' as _i2;
import 'package:new_words/entities/user.dart' as _i6;
import 'package:new_words/entities/user_settings.dart' as _i8;
import 'package:new_words/services/user_settings_service.dart' as _i7;
import 'package:new_words/utils/token_utils.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiResponseV2_0<T> extends _i1.SmartFake
    implements _i2.ApiResponseV2<T> {
  _FakeApiResponseV2_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeOptions_1 extends _i1.SmartFake implements _i3.Options {
  _FakeOptions_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDuration_2 extends _i1.SmartFake implements Duration {
  _FakeDuration_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AccountApiV2].
///
/// See the documentation for Mockito's code generation for more information.
class MockAccountApiV2 extends _i1.Mock implements _i4.AccountApiV2 {
  MockAccountApiV2() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.ApiResponseV2<Map<String, dynamic>>> login(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#login, [email, password]),
            returnValue:
                _i5.Future<_i2.ApiResponseV2<Map<String, dynamic>>>.value(
                  _FakeApiResponseV2_0<Map<String, dynamic>>(
                    this,
                    Invocation.method(#login, [email, password]),
                  ),
                ),
          )
          as _i5.Future<_i2.ApiResponseV2<Map<String, dynamic>>>);

  @override
  _i5.Future<_i2.ApiResponseV2<Map<String, dynamic>>> register(
    String? email,
    String? password,
    String? nativeLanguage,
    String? learningLanguage,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#register, [
              email,
              password,
              nativeLanguage,
              learningLanguage,
            ]),
            returnValue:
                _i5.Future<_i2.ApiResponseV2<Map<String, dynamic>>>.value(
                  _FakeApiResponseV2_0<Map<String, dynamic>>(
                    this,
                    Invocation.method(#register, [
                      email,
                      password,
                      nativeLanguage,
                      learningLanguage,
                    ]),
                  ),
                ),
          )
          as _i5.Future<_i2.ApiResponseV2<Map<String, dynamic>>>);

  @override
  _i5.Future<_i2.ApiResponseV2<Map<String, dynamic>>> refreshToken() =>
      (super.noSuchMethod(
            Invocation.method(#refreshToken, []),
            returnValue:
                _i5.Future<_i2.ApiResponseV2<Map<String, dynamic>>>.value(
                  _FakeApiResponseV2_0<Map<String, dynamic>>(
                    this,
                    Invocation.method(#refreshToken, []),
                  ),
                ),
          )
          as _i5.Future<_i2.ApiResponseV2<Map<String, dynamic>>>);

  @override
  _i5.Future<_i2.ApiResponseV2<_i6.User>> getMyInformation() =>
      (super.noSuchMethod(
            Invocation.method(#getMyInformation, []),
            returnValue: _i5.Future<_i2.ApiResponseV2<_i6.User>>.value(
              _FakeApiResponseV2_0<_i6.User>(
                this,
                Invocation.method(#getMyInformation, []),
              ),
            ),
          )
          as _i5.Future<_i2.ApiResponseV2<_i6.User>>);

  @override
  _i5.Future<_i2.ApiResponseV2<void>> changePassword(
    String? currentPassword,
    String? newPassword,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#changePassword, [currentPassword, newPassword]),
            returnValue: _i5.Future<_i2.ApiResponseV2<void>>.value(
              _FakeApiResponseV2_0<void>(
                this,
                Invocation.method(#changePassword, [
                  currentPassword,
                  newPassword,
                ]),
              ),
            ),
          )
          as _i5.Future<_i2.ApiResponseV2<void>>);

  @override
  _i5.Future<_i2.ApiResponseV2<void>> updateLanguages(
    String? nativeLanguage,
    String? learningLanguage,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateLanguages, [
              nativeLanguage,
              learningLanguage,
            ]),
            returnValue: _i5.Future<_i2.ApiResponseV2<void>>.value(
              _FakeApiResponseV2_0<void>(
                this,
                Invocation.method(#updateLanguages, [
                  nativeLanguage,
                  learningLanguage,
                ]),
              ),
            ),
          )
          as _i5.Future<_i2.ApiResponseV2<void>>);

  @override
  _i5.Future<_i2.ApiResponseV2<T>> get<T>(
    String? path, {
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
    T Function(dynamic)? fromJson,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #get,
              [path],
              {
                #queryParameters: queryParameters,
                #options: options,
                #fromJson: fromJson,
              },
            ),
            returnValue: _i5.Future<_i2.ApiResponseV2<T>>.value(
              _FakeApiResponseV2_0<T>(
                this,
                Invocation.method(
                  #get,
                  [path],
                  {
                    #queryParameters: queryParameters,
                    #options: options,
                    #fromJson: fromJson,
                  },
                ),
              ),
            ),
          )
          as _i5.Future<_i2.ApiResponseV2<T>>);

  @override
  _i5.Future<_i2.ApiResponseV2<T>> post<T>(
    String? path, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
    T Function(dynamic)? fromJson,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #fromJson: fromJson,
              },
            ),
            returnValue: _i5.Future<_i2.ApiResponseV2<T>>.value(
              _FakeApiResponseV2_0<T>(
                this,
                Invocation.method(
                  #post,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #fromJson: fromJson,
                  },
                ),
              ),
            ),
          )
          as _i5.Future<_i2.ApiResponseV2<T>>);

  @override
  _i5.Future<_i2.ApiResponseV2<T>> put<T>(
    String? path, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
    T Function(dynamic)? fromJson,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #put,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #fromJson: fromJson,
              },
            ),
            returnValue: _i5.Future<_i2.ApiResponseV2<T>>.value(
              _FakeApiResponseV2_0<T>(
                this,
                Invocation.method(
                  #put,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #fromJson: fromJson,
                  },
                ),
              ),
            ),
          )
          as _i5.Future<_i2.ApiResponseV2<T>>);

  @override
  _i5.Future<_i2.ApiResponseV2<T>> delete<T>(
    String? path, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
    T Function(dynamic)? fromJson,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #fromJson: fromJson,
              },
            ),
            returnValue: _i5.Future<_i2.ApiResponseV2<T>>.value(
              _FakeApiResponseV2_0<T>(
                this,
                Invocation.method(
                  #delete,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #fromJson: fromJson,
                  },
                ),
              ),
            ),
          )
          as _i5.Future<_i2.ApiResponseV2<T>>);

  @override
  _i5.Future<_i2.ApiResponseV2<void>> requestVoid(
    String? method,
    String? path, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #requestVoid,
              [method, path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
              },
            ),
            returnValue: _i5.Future<_i2.ApiResponseV2<void>>.value(
              _FakeApiResponseV2_0<void>(
                this,
                Invocation.method(
                  #requestVoid,
                  [method, path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                  },
                ),
              ),
            ),
          )
          as _i5.Future<_i2.ApiResponseV2<void>>);

  @override
  _i2.ApiResponseV2<T> parseResponse<T>(
    _i3.Response<dynamic>? response,
    T Function(dynamic)? fromJson,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#parseResponse, [response, fromJson]),
            returnValue: _FakeApiResponseV2_0<T>(
              this,
              Invocation.method(#parseResponse, [response, fromJson]),
            ),
          )
          as _i2.ApiResponseV2<T>);

  @override
  _i2.ApiResponseV2<void> parseVoidResponse(_i3.Response<dynamic>? response) =>
      (super.noSuchMethod(
            Invocation.method(#parseVoidResponse, [response]),
            returnValue: _FakeApiResponseV2_0<void>(
              this,
              Invocation.method(#parseVoidResponse, [response]),
            ),
          )
          as _i2.ApiResponseV2<void>);

  @override
  _i3.Options createOptions({
    Duration? connectTimeout,
    Duration? receiveTimeout,
    Map<String, dynamic>? headers,
    String? contentType,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createOptions, [], {
              #connectTimeout: connectTimeout,
              #receiveTimeout: receiveTimeout,
              #headers: headers,
              #contentType: contentType,
            }),
            returnValue: _FakeOptions_1(
              this,
              Invocation.method(#createOptions, [], {
                #connectTimeout: connectTimeout,
                #receiveTimeout: receiveTimeout,
                #headers: headers,
                #contentType: contentType,
              }),
            ),
          )
          as _i3.Options);

  @override
  _i3.Options createAnonymousOptions({
    Duration? connectTimeout,
    Duration? receiveTimeout,
    Map<String, dynamic>? headers,
    String? contentType,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createAnonymousOptions, [], {
              #connectTimeout: connectTimeout,
              #receiveTimeout: receiveTimeout,
              #headers: headers,
              #contentType: contentType,
            }),
            returnValue: _FakeOptions_1(
              this,
              Invocation.method(#createAnonymousOptions, [], {
                #connectTimeout: connectTimeout,
                #receiveTimeout: receiveTimeout,
                #headers: headers,
                #contentType: contentType,
              }),
            ),
          )
          as _i3.Options);

  @override
  _i3.Options createLongRunningOptions({
    Duration? connectTimeout = const Duration(minutes: 2),
    Duration? receiveTimeout = const Duration(minutes: 5),
    Map<String, dynamic>? headers,
    String? contentType,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createLongRunningOptions, [], {
              #connectTimeout: connectTimeout,
              #receiveTimeout: receiveTimeout,
              #headers: headers,
              #contentType: contentType,
            }),
            returnValue: _FakeOptions_1(
              this,
              Invocation.method(#createLongRunningOptions, [], {
                #connectTimeout: connectTimeout,
                #receiveTimeout: receiveTimeout,
                #headers: headers,
                #contentType: contentType,
              }),
            ),
          )
          as _i3.Options);
}

/// A class which mocks [UserSettingsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserSettingsService extends _i1.Mock
    implements _i7.UserSettingsService {
  MockUserSettingsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i8.UserSettings>> getAll() =>
      (super.noSuchMethod(
            Invocation.method(#getAll, []),
            returnValue: _i5.Future<List<_i8.UserSettings>>.value(
              <_i8.UserSettings>[],
            ),
          )
          as _i5.Future<List<_i8.UserSettings>>);

  @override
  _i5.Future<bool> upsert(String? settingName, String? settingValue) =>
      (super.noSuchMethod(
            Invocation.method(#upsert, [settingName, settingValue]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);
}

/// A class which mocks [TokenUtils].
///
/// See the documentation for Mockito's code generation for more information.
class MockTokenUtils extends _i1.Mock implements _i9.TokenUtils {
  MockTokenUtils() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<Map<String, dynamic>> decodeToken(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#decodeToken, [token]),
            returnValue: _i5.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<Duration> getTokenRemainingTime(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#getTokenRemainingTime, [token]),
            returnValue: _i5.Future<Duration>.value(
              _FakeDuration_2(
                this,
                Invocation.method(#getTokenRemainingTime, [token]),
              ),
            ),
          )
          as _i5.Future<Duration>);

  @override
  Duration getTokenRemainingTimeSync(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#getTokenRemainingTimeSync, [token]),
            returnValue: _FakeDuration_2(
              this,
              Invocation.method(#getTokenRemainingTimeSync, [token]),
            ),
          )
          as Duration);
}
